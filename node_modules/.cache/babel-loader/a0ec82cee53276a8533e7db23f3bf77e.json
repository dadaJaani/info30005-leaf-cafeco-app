{"ast":null,"code":"import _classCallCheck from \"/Users/waqasrehmani/work/info30005/info30005-leaf-cafeco-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/waqasrehmani/work/info30005/info30005-leaf-cafeco-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/waqasrehmani/work/info30005/info30005-leaf-cafeco-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/waqasrehmani/work/info30005/info30005-leaf-cafeco-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/waqasrehmani/work/info30005/info30005-leaf-cafeco-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/waqasrehmani/work/info30005/info30005-leaf-cafeco-app/src/screens/PartnerReviews.js\";\nimport React, { Component } from 'react';\nimport Rating from 'react-rating';\nimport PartnerSidebar from '../components/PartnerSidebar';\nimport '../styles/restaurant.css';\nimport logo from \"../assets/cafecopartnerslogo.svg\";\nimport leafOpaque from \"../assets/leaf-opaque.svg\";\nimport leafTranslucent from \"../assets/leaf-translucent.svg\";\nimport marker from \"../assets/Image-10.png\";\nimport { Link } from \"react-router-dom\";\n\nvar PartnerReviews =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PartnerReviews, _Component);\n\n  function PartnerReviews(props) {\n    var _this;\n\n    _classCallCheck(this, PartnerReviews);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PartnerReviews).call(this, props));\n\n    _this.getDate = function (temp) {\n      var date = new Date(temp);\n      return \"\".concat(date.getDate(), \"/\").concat(date.getMonth(), \"/\").concat(date.getFullYear());\n    };\n\n    _this.state = {\n      salePriceInput: 0,\n      partner: props.partner\n    };\n    return _this;\n  }\n\n  _createClass(PartnerReviews, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props !== nextProps) {\n        this.setState({\n          partner: nextProps.partner\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var partner = this.state.partner;\n      var topReviews = [];\n      var worstReviews = [];\n      var allReviews = [];\n\n      if (partner.id) {\n        allReviews = partner.sustainabilityReviews;\n        console.log(allReviews);\n        topReviews = allReviews.sort(function (b, a) {\n          return a.rating - b.rating;\n        }).slice(0, 5);\n        worstReviews = allReviews.sort(function (b, a) {\n          return b.rating - a.rating;\n        }).slice(0, 5);\n      }\n\n      if (partner.id) {\n        return React.createElement(\"div\", {\n          className: \"partner-top-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(PartnerSidebar, {\n          name: partner.name,\n          address: partner.address,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"partner-review-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Reviews and Ratings\"), React.createElement(\"div\", {\n          className: \"partner-review-rating\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"4.9\"), React.createElement(\"img\", {\n          src: leafOpaque,\n          alt: \"leaf\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"partner-top-reviews-heading\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"Top 5 Reviews\"), React.createElement(\"div\", {\n          className: \"partner-top-reviews-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, topReviews.map(function (item) {\n          return React.createElement(\"div\", {\n            className: \"partner-reviews-item\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, item.username, \" \"), React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, _this2.getDate(item.date)), React.createElement(Rating, {\n            initialRating: item.rating,\n            readonly: true,\n            emptySymbol: React.createElement(\"img\", {\n              alt: \"leaf empty\",\n              width: 22,\n              height: 22,\n              src: leafTranslucent,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 91\n              },\n              __self: this\n            }),\n            fullSymbol: React.createElement(\"img\", {\n              alt: \"leaf full\",\n              width: 22,\n              height: 22,\n              src: leafOpaque,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 99\n              },\n              __self: this\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, item.review)));\n        })), React.createElement(\"div\", {\n          className: \"partner-worst-reviews-heading\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"Worst 5 Reviews\"), React.createElement(\"div\", {\n          className: \"partner-worst-reviews-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, worstReviews.map(function (item) {\n          return React.createElement(\"div\", {\n            className: \"partner-reviews-item\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, item.username, \" \"), React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, _this2.getDate(item.date)), React.createElement(Rating, {\n            initialRating: item.rating,\n            readonly: true,\n            emptySymbol: React.createElement(\"img\", {\n              alt: \"leaf empty\",\n              width: 22,\n              height: 22,\n              src: leafTranslucent,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 135\n              },\n              __self: this\n            }),\n            fullSymbol: React.createElement(\"img\", {\n              alt: \"leaf full\",\n              width: 22,\n              height: 22,\n              src: leafOpaque,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 143\n              },\n              __self: this\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154\n            },\n            __self: this\n          }, item.review)));\n        })), React.createElement(\"div\", {\n          className: \"partner-all-reviews-heading\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, \"All 5Reviews\"), React.createElement(\"div\", {\n          className: \"partner-all-reviews-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, allReviews.map(function (item) {\n          return React.createElement(\"div\", {\n            className: \"partner-reviews-item\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 172\n            },\n            __self: this\n          }, item.username, \" \"), React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173\n            },\n            __self: this\n          }, _this2.getDate(item.date)), React.createElement(Rating, {\n            initialRating: item.rating,\n            readonly: true,\n            emptySymbol: React.createElement(\"img\", {\n              alt: \"leaf empty\",\n              width: 22,\n              height: 22,\n              src: leafTranslucent,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 178\n              },\n              __self: this\n            }),\n            fullSymbol: React.createElement(\"img\", {\n              alt: \"leaf full\",\n              width: 22,\n              height: 22,\n              src: leafOpaque,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 186\n              },\n              __self: this\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197\n            },\n            __self: this\n          }, item.review)));\n        }))));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"profile-not-signed-in\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, \"No partner logged in. Please Log In.\"), React.createElement(Link, {\n          className: 'navbar-button',\n          to: '/partner/login',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, \" Partner Login \"));\n      }\n    }\n  }]);\n\n  return PartnerReviews;\n}(Component);\n\nexport default PartnerReviews;","map":{"version":3,"sources":["/Users/waqasrehmani/work/info30005/info30005-leaf-cafeco-app/src/screens/PartnerReviews.js"],"names":["React","Component","Rating","PartnerSidebar","marker","Link","PartnerReviews","props","getDate","temp","date","Date","getMonth","getFullYear","state","salePriceInput","partner","nextProps","setState","topReviews","worstReviews","allReviews","id","sustainabilityReviews","console","log","sort","b","a","rating","slice","name","address","leafOpaque","map","item","username","leafTranslucent","review"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Rating from 'react-rating';\n\nimport PartnerSidebar from '../components/PartnerSidebar'\n\nimport '../styles/restaurant.css';\n\nimport logo from \"../assets/cafecopartnerslogo.svg\";\nimport leafOpaque from \"../assets/leaf-opaque.svg\";\nimport leafTranslucent from \"../assets/leaf-translucent.svg\";\nimport marker from \"../assets/Image-10.png\";\nimport {Link} from \"react-router-dom\";\n\nclass PartnerReviews extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            salePriceInput: 0,\n            partner: props.partner\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props !== nextProps){\n            this.setState({\n                partner: nextProps.partner\n            })\n        }\n    }\n\n    getDate = (temp) => {\n        let date = new Date(temp)\n        return `${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`\n    }\n\n    render() {\n\n        const { partner } = this.state\n        let topReviews = []\n        let worstReviews = []\n        let allReviews = []\n\n        if (partner.id) {\n            allReviews = partner.sustainabilityReviews\n            console.log(allReviews)\n            topReviews = allReviews.sort((b ,a) => a.rating - b.rating).slice(0,5);\n            worstReviews = allReviews.sort((b ,a) => b.rating - a.rating).slice(0,5);\n\n\n        }\n\n        if (partner.id) {\n            return (\n                <div className = \"partner-top-container\">\n                    <PartnerSidebar\n                        name={partner.name}\n                        address={partner.address}\n\n                    />\n\n\n\n                    <div className=\"partner-review-container\">\n                        <h1>\n                            Reviews and Ratings\n                        </h1>\n                        <div className=\"partner-review-rating\">\n                            <label>\n                                4.9\n                            </label>\n                            <img src={leafOpaque} alt = \"leaf\"/>\n                        </div>\n\n\n                        <div className=\"partner-top-reviews-heading\">\n                            Top 5 Reviews\n                        </div>\n                        <div className=\"partner-top-reviews-container\">\n                            {\n                                topReviews.map(item =>\n                                    <div className=\"partner-reviews-item\">\n                                        <span>\n                                            <h2>{item.username} </h2>\n                                            <label>{this.getDate(item.date)}</label>\n                                            <Rating\n                                                initialRating={item.rating}\n                                                readonly={true}\n                                                emptySymbol={\n                                                    <img\n                                                        alt='leaf empty'\n                                                        width={22}\n                                                        height={22}\n                                                        src={leafTranslucent}\n                                                    />\n                                                }\n                                                fullSymbol={\n                                                    <img\n                                                        alt='leaf full'\n                                                        width={22}\n                                                        height={22}\n                                                        src={leafOpaque}\n                                                    />\n                                                }\n\n                                            />\n                                        </span>\n                                        <div>\n                                            <p>\n                                                {item.review}\n                                            </p>\n                                        </div>\n                                    </div>\n                                )\n                            }\n\n                        </div>\n\n\n                        <div className=\"partner-worst-reviews-heading\">\n                            Worst 5 Reviews\n                        </div>\n                        <div className=\"partner-worst-reviews-container\">\n                            {\n                                worstReviews.map(item =>\n                                    <div className=\"partner-reviews-item\">\n                                        <span>\n                                            <h2>{item.username} </h2>\n                                            <label>{this.getDate(item.date)}</label>\n                                            <Rating\n                                                initialRating={item.rating}\n                                                readonly={true}\n                                                emptySymbol={\n                                                    <img\n                                                        alt='leaf empty'\n                                                        width={22}\n                                                        height={22}\n                                                        src={leafTranslucent}\n                                                    />\n                                                }\n                                                fullSymbol={\n                                                    <img\n                                                        alt='leaf full'\n                                                        width={22}\n                                                        height={22}\n                                                        src={leafOpaque}\n                                                    />\n                                                }\n\n                                            />\n                                        </span>\n                                        <div>\n                                            <p>\n                                                {item.review}\n                                            </p>\n                                        </div>\n                                    </div>\n                                )\n                            }\n\n                        </div>\n\n                        <div className=\"partner-all-reviews-heading\">\n                            All 5Reviews\n                        </div>\n                        <div className=\"partner-all-reviews-container\">\n                            {\n                                allReviews.map(item =>\n                                    <div className=\"partner-reviews-item\">\n                                        <span>\n                                            <h2>{item.username} </h2>\n                                            <label>{this.getDate(item.date)}</label>\n                                            <Rating\n                                                initialRating={item.rating}\n                                                readonly={true}\n                                                emptySymbol={\n                                                    <img\n                                                        alt='leaf empty'\n                                                        width={22}\n                                                        height={22}\n                                                        src={leafTranslucent}\n                                                    />\n                                                }\n                                                fullSymbol={\n                                                    <img\n                                                        alt='leaf full'\n                                                        width={22}\n                                                        height={22}\n                                                        src={leafOpaque}\n                                                    />\n                                                }\n\n                                            />\n                                        </span>\n                                        <div>\n                                            <p>\n                                                {item.review}\n                                            </p>\n                                        </div>\n                                    </div>\n                                )\n                            }\n\n                        </div>\n                    </div>\n\n                </div>\n            );\n        } else {\n            return (\n\n                <div className='profile-not-signed-in'>\n                    <h1>\n                        No partner logged in. Please Log In.\n                    </h1>\n\n                    <Link\n                        className={'navbar-button'}\n                        to={'/partner/login'}\n                    > Partner Login </Link>\n\n\n                </div>\n\n\n            )\n        }\n    }\n}\n\nexport default PartnerReviews;\n"]},"metadata":{},"sourceType":"module"}