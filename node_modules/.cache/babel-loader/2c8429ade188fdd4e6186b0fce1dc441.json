{"ast":null,"code":"import _objectSpread from \"/Users/waqasrehmani/work/info30005/info30005-leaf-cafeco-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/waqasrehmani/work/info30005/info30005-leaf-cafeco-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/waqasrehmani/work/info30005/info30005-leaf-cafeco-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/waqasrehmani/work/info30005/info30005-leaf-cafeco-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/waqasrehmani/work/info30005/info30005-leaf-cafeco-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/waqasrehmani/work/info30005/info30005-leaf-cafeco-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/waqasrehmani/work/info30005/info30005-leaf-cafeco-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/waqasrehmani/work/info30005/info30005-leaf-cafeco-app/src/screens/RestaurantDetails.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport GoogleMapReact from 'google-map-react';\nimport Rating from 'react-rating';\nimport { IoIosStarOutline, IoIosStar } from 'react-icons/io';\nimport NavBar from \"../components/NavBar\";\nimport RewardSelector from \"../components/RewardSelector\";\nimport Footer from '../components/Footer';\nimport leafTranslucent from \"../assets/leaf-translucent.svg\";\nimport leafOpaque from \"../assets/leaf-opaque.svg\";\nimport locMarker from \"../assets/loc-marker.svg\";\nimport * as API from '../utils/api';\n\nvar AnyReactComponent = function AnyReactComponent(_ref) {\n  var text = _ref.text;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"marker map\",\n    src: locMarker,\n    width: 30,\n    height: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n};\n\nvar RestaurantDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RestaurantDetails, _Component);\n\n  function RestaurantDetails(props) {\n    var _this;\n\n    _classCallCheck(this, RestaurantDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RestaurantDetails).call(this, props));\n\n    _this.setFavorite = function () {\n      console.log(\"Set Fav\");\n      console.log(\"Current Fav of user:\", _this.props.user.savedRestaurants);\n      var newSaved = {\n        savedRestaurants: [].concat(_toConsumableArray(_this.props.user.savedRestaurants), [_this.state.restaurant.id]) // var newSaved = this.props.user.savedRestaurants;\n\n      };\n      API.editUserSavedRestaurants(_this.props.user.username, newSaved).then(function (res) {\n        _this.setState({\n          isFavorite: true\n        });\n\n        _this.props.updateUser(_objectSpread({}, _this.props.user, {\n          savedRestaurants: newSaved.savedRestaurants\n        }));\n      });\n    };\n\n    _this.unsetFavorite = function () {\n      console.log(\"Unset Fav\");\n      console.log(\"Current Fav of user:\", _this.props.user.savedRestaurants);\n      var newSaved = {\n        savedRestaurants: _this.props.user.savedRestaurants.filter(function (item) {\n          return item !== _this.state.restaurant.id;\n        })\n      };\n      API.editUserSavedRestaurants(_this.props.user.username, newSaved).then(function (res) {\n        _this.setState({\n          isFavorite: false\n        });\n\n        _this.props.updateUser(_objectSpread({}, _this.props.user, {\n          savedRestaurants: newSaved.savedRestaurants\n        }));\n      });\n    };\n\n    _this.submitReview = function () {\n      var review = {\n        username: _this.props.user.username,\n        review: _this.state.reviewText,\n        rating: _this.state.reviewRating,\n        date: new Date()\n      };\n      API.createReview(_this.state.restaurant.id, review).then(function (res) {\n        var temp = _this.state.allReviews;\n        temp.push(review);\n\n        _this.setState({\n          reviewText: '',\n          reviewRating: 0\n        });\n\n        _this.props.populateAllRestaurants();\n      });\n    };\n\n    _this.showLogin = function () {\n      _this.navbar.current.showLogin();\n    };\n\n    _this.showSignup = function () {\n      _this.navbar.current.showSignup();\n    };\n\n    _this.logInUser = function (user) {\n      _this.props.logInUser(user);\n    };\n\n    _this.logOutUser = function () {\n      _this.props.logOutUser();\n    };\n\n    _this.goToProfile = function () {\n      _this.props.history.push('/user/' + _this.props.user.name);\n    };\n\n    _this.signUpUser = function (user) {\n      _this.props.signUpUser(user);\n    };\n\n    _this.dateString = function (date) {\n      var temp = new Date(date);\n      var result = \"\".concat(temp.getDate(), \"/\").concat(temp.getMonth(), \"/\").concat(temp.getFullYear());\n      return result;\n    };\n\n    _this.state = {\n      restaurant: props.restaurant,\n      allReviews: props.restaurant.sustainabilityReviews,\n      isFavorite: false,\n      reviewText: '',\n      reviewRating: 0\n    };\n    _this.navbar = React.createRef();\n    return _this;\n  }\n\n  _createClass(RestaurantDetails, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      if (this.props.loading !== nextProps.loading) {\n        console.log(\"COMPONNENNT WILL RECIEVE PROPS DESTO DETAIL:\");\n        console.log(nextProps);\n        var address = this.props.history.location.pathname.substring(12);\n        var selectedRestaurant = nextProps.restaurants.find(function (a) {\n          return a.id === address;\n        });\n        this.setState({\n          restaurant: selectedRestaurant,\n          allReviews: selectedRestaurant.sustainabilityReviews\n        });\n      }\n\n      if (!nextProps.user) {} else {\n        var temp = nextProps.user.savedRestaurants.filter(function (element) {\n          return element === _this2.state.restaurant.id;\n        });\n\n        if (!temp) {} else {\n          this.setState({\n            isFavorite: true\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      // if (this.props.restaurant.id === undefined) {\n      //\n      //     API.getRestaurant(this.props.history.location.pathname.substring(12)).then(item => {\n      //         this.setState({\n      //             restaurant: item[0],\n      //             allReviews: item[0].sustainabilityReviews,\n      //         })\n      //\n      //         if (this.props.userLoggedIn) {\n      //             console.log('this.props.user.savedRestaurants', this.props.user.savedRestaurants)\n      //             let temp = this.props.user.savedRestaurants.find( element => element === this.props.restaurant.id)\n      //\n      //             if (!temp) {\n      //             } else {\n      //                 this.setState({\n      //                     isFavorite: true\n      //                 });\n      //             }\n      //         }\n      //     })\n      // }\n      //\n      if (this.props.userLoggedIn) {\n        var temp = this.props.user.savedRestaurants.filter(function (element) {\n          return element === _this3.props.restaurant.id;\n        });\n\n        if (!temp) {} else {\n          this.setState({\n            isFavorite: true\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      // console.log('IS THIS RESTO SAVED:', this.state.isFavorite)\n      var _this$state = this.state,\n          restaurant = _this$state.restaurant,\n          allReviews = _this$state.allReviews;\n\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, \"LOADING\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, React.createElement(NavBar, Object.assign({}, this.props, {\n          ref: this.navbar,\n          logOutUser: this.logOutUser,\n          logInUser: this.logInUser,\n          signUpUser: this.signUpUser,\n          userLoggedIn: this.props.userLoggedIn,\n          goToProfile: this.goToProfile,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        })), restaurant.id !== undefined ? React.createElement(\"div\", {\n          className: \"restaurant-detail-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, React.createElement(RewardSelector, {\n          userLoggedIn: this.props.userLoggedIn,\n          user: this.props.user,\n          restaurant: this.state.restaurant,\n          showLogin: this.showLogin,\n          showSignup: this.showSignup,\n          offeredRewards: this.state.restaurant.typeOfRewards,\n          updateUser: this.props.updateUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"restaurant-detail-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, restaurant.name), React.createElement(\"div\", {\n          className: \"restaurant-detail-photo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: restaurant.photo,\n          alt: \"restaurant photo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"restaurant-detail-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }, restaurant.description), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          },\n          __self: this\n        }, restaurant.address), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }, restaurant.phone), React.createElement(\"a\", {\n          href: 'http://www.' + restaurant.website,\n          target: \"_blank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, \"Eatery Website\")), React.createElement(\"div\", {\n          className: \"restaurant-detail-rating\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        }, \"Eco Friendliness\"), React.createElement(Rating, {\n          initialRating: restaurant.averageSustainabilityRating,\n          readonly: true,\n          emptySymbol: React.createElement(\"img\", {\n            alt: \"leaf empty\",\n            width: 40,\n            height: 40,\n            src: leafTranslucent,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 272\n            },\n            __self: this\n          }),\n          fullSymbol: React.createElement(\"img\", {\n            alt: \"leaf full\",\n            width: 40,\n            height: 40,\n            src: leafOpaque,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 280\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"restaurant-detail-map\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }, React.createElement(GoogleMapReact, {\n          bootstrapURLKeys: {\n            key: 'AIzaSyAThroloBz4lBlrWA_ZCmtXfOFdsI46CXY'\n          },\n          defaultCenter: {\n            lat: restaurant.location.lat,\n            lng: restaurant.location.lng\n          },\n          defaultZoom: this.props.zoom,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }, React.createElement(AnyReactComponent, {\n          lat: restaurant.location.lat,\n          lng: restaurant.location.lng,\n          text: \"My Marker\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"restaurant-detail-about\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          },\n          __self: this\n        }, \"About\"), React.createElement(\"div\", {\n          className: this.props.userLoggedIn ? 'restaurant-detail-star-container' : 'restaurant-detail-star-container-hide',\n          onClick: this.state.isFavorite ? this.unsetFavorite : this.setFavorite,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        }, this.state.isFavorite ? React.createElement(IoIosStar, {\n          className: \"restaurant-detail-star restaurant-detail-star-selected\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }) : React.createElement(IoIosStarOutline, {\n          className: \"restaurant-detail-star restaurant-detail-star-not-selected\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          },\n          __self: this\n        }, \" \", restaurant.about, \" \"), React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          },\n          __self: this\n        }, \"Sustainable Practices\"), React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333\n          },\n          __self: this\n        }, restaurant.sustainabilityPractices.map(function (item) {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 336\n            },\n            __self: this\n          }, item);\n        }))), React.createElement(\"div\", {\n          className: \"restaurant-detail-reviews\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345\n          },\n          __self: this\n        }, \"Reviews\"), this.props.userLoggedIn ? React.createElement(\"div\", {\n          className: \"restaurant-detail-reviews-list-input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351\n          },\n          __self: this\n        }, \"Write a review.\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352\n          },\n          __self: this\n        }, React.createElement(Rating, {\n          initialRating: this.state.reviewRating,\n          onChange: function onChange(rate) {\n            return _this4.setState({\n              reviewRating: rate\n            });\n          },\n          emptySymbol: React.createElement(\"img\", {\n            alt: \"leaf empty\",\n            width: 22,\n            height: 22,\n            src: leafTranslucent,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 358\n            },\n            __self: this\n          }),\n          fullSymbol: React.createElement(\"img\", {\n            alt: \"leaf full\",\n            width: 22,\n            height: 22,\n            src: leafOpaque,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 366\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353\n          },\n          __self: this\n        })), React.createElement(\"textarea\", {\n          value: this.state.reviewText,\n          onChange: function onChange(rate) {\n            return _this4.setState({\n              reviewText: rate.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: this.submitReview,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381\n          },\n          __self: this\n        }, \"Submit Review\")) : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"restaurant-detail-reviews-list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391\n          },\n          __self: this\n        }, allReviews.map(function (review) {\n          return React.createElement(\"div\", {\n            className: \"restaurant-detail-reviews-list-item\",\n            key: \"\".concat(review.username, \"/\").concat(Date.parse(review.date)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 394\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 398\n            },\n            __self: this\n          }, review.username), React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 399\n            },\n            __self: this\n          }, React.createElement(Rating, {\n            initialRating: review.rating,\n            readonly: true,\n            emptySymbol: React.createElement(\"img\", {\n              alt: \"leaf empty\",\n              width: 22,\n              height: 22,\n              src: leafTranslucent,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 404\n              },\n              __self: this\n            }),\n            fullSymbol: React.createElement(\"img\", {\n              alt: \"leaf full\",\n              width: 22,\n              height: 22,\n              src: leafOpaque,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 412\n              },\n              __self: this\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 400\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 421\n            },\n            __self: this\n          }, _this4.dateString(review.date))), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 424\n            },\n            __self: this\n          }, review.review));\n        }), React.createElement(\"div\", {\n          className: \"restaurant-detail-reviews-list-item-void\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 429\n          },\n          __self: this\n        })))) : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 439\n          },\n          __self: this\n        }, \"Loading\"), React.createElement(Footer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 446\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return RestaurantDetails;\n}(Component);\n\nRestaurantDetails.defaultProps = {\n  center: {\n    lat: -37,\n    lng: 144\n  },\n  zoom: 13\n};\nexport default withRouter(RestaurantDetails);","map":{"version":3,"sources":["/Users/waqasrehmani/work/info30005/info30005-leaf-cafeco-app/src/screens/RestaurantDetails.js"],"names":["React","Component","withRouter","GoogleMapReact","Rating","IoIosStarOutline","IoIosStar","NavBar","RewardSelector","Footer","API","AnyReactComponent","text","locMarker","RestaurantDetails","props","setFavorite","console","log","user","savedRestaurants","newSaved","state","restaurant","id","editUserSavedRestaurants","username","then","res","setState","isFavorite","updateUser","unsetFavorite","filter","item","submitReview","review","reviewText","rating","reviewRating","date","Date","createReview","temp","allReviews","push","populateAllRestaurants","showLogin","navbar","current","showSignup","logInUser","logOutUser","goToProfile","history","name","signUpUser","dateString","result","getDate","getMonth","getFullYear","sustainabilityReviews","createRef","nextProps","loading","address","location","pathname","substring","selectedRestaurant","restaurants","find","a","element","userLoggedIn","undefined","typeOfRewards","photo","description","phone","website","averageSustainabilityRating","leafTranslucent","leafOpaque","key","lat","lng","zoom","about","sustainabilityPractices","map","rate","target","value","parse","defaultProps","center"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from \"react-router-dom\";\nimport GoogleMapReact from 'google-map-react';\nimport Rating from 'react-rating';\n\nimport { IoIosStarOutline, IoIosStar } from 'react-icons/io'\n\nimport NavBar from \"../components/NavBar\";\nimport RewardSelector from \"../components/RewardSelector\";\nimport Footer from '../components/Footer'\n\nimport leafTranslucent from '../assets/leaf-translucent.svg'\nimport leafOpaque from '../assets/leaf-opaque.svg'\nimport locMarker from '../assets/loc-marker.svg'\n\nimport * as API from '../utils/api'\n\n\nconst AnyReactComponent = ({ text }) => <div>\n    <img alt='marker map'  src={locMarker} width={30} height={30}/>\n</div>;\n\nclass RestaurantDetails extends Component {\n    \n    constructor(props) {\n        super(props)\n\n        this.state = {\n            restaurant: props.restaurant,\n            allReviews: props.restaurant.sustainabilityReviews,\n            isFavorite: false,\n            reviewText: '',\n            reviewRating: 0,\n        }\n\n        this.navbar = React.createRef();\n\n    }\n\n    setFavorite = () => {\n        console.log(\"Set Fav\")\n        console.log(\"Current Fav of user:\", this.props.user.savedRestaurants)\n\n        let newSaved = {\n            savedRestaurants: [...this.props.user.savedRestaurants, this.state.restaurant.id],\n        }\n        // var newSaved = this.props.user.savedRestaurants;\n\n        API.editUserSavedRestaurants(this.props.user.username, newSaved).then(res => {\n            this.setState({\n                isFavorite: true\n            })\n            this.props.updateUser({\n                ...this.props.user,\n                savedRestaurants: newSaved.savedRestaurants\n            });\n        })\n\n    }\n\n    unsetFavorite = () => {\n        console.log(\"Unset Fav\")\n        console.log(\"Current Fav of user:\", this.props.user.savedRestaurants)\n\n        let newSaved = {\n            savedRestaurants: this.props.user.savedRestaurants.filter(item => item !== this.state.restaurant.id),\n        }\n\n        API.editUserSavedRestaurants(this.props.user.username, newSaved).then(res => {\n            this.setState({\n                isFavorite: false\n            })\n            this.props.updateUser({\n                ...this.props.user,\n                savedRestaurants: newSaved.savedRestaurants\n            });\n        })\n\n    }\n\n\n    submitReview = () => {\n\n        let review = {\n            username: this.props.user.username,\n            review: this.state.reviewText,\n            rating: this.state.reviewRating,\n            date: new Date(),\n        }\n\n        API.createReview(this.state.restaurant.id, review)\n            .then(res => {\n                let temp = this.state.allReviews\n                temp.push(review)\n                this.setState({\n                    reviewText: '',\n                    reviewRating: 0,\n\n                })\n\n                this.props.populateAllRestaurants()\n            })\n\n\n    }\n\n    showLogin = () => {\n        this.navbar.current.showLogin()\n    }\n    showSignup = () => {\n        this.navbar.current.showSignup()\n    }\n\n    logInUser = (user) => {\n        this.props.logInUser(user)\n    }\n\n    logOutUser = () => {\n        this.props.logOutUser()\n    }\n\n    goToProfile = () => {\n        this.props.history.push('/user/' + this.props.user.name)\n    }\n\n    signUpUser = (user) => {\n        this.props.signUpUser(user)\n    }\n\n    dateString = (date) => {\n        let temp = new Date(date)\n        let result = `${temp.getDate()}/${temp.getMonth()}/${temp.getFullYear()}`\n\n        return result\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.loading !== nextProps.loading) {\n            console.log(\"COMPONNENNT WILL RECIEVE PROPS DESTO DETAIL:\")\n            console.log(nextProps)\n\n            let address = this.props.history.location.pathname.substring(12)\n            let selectedRestaurant = nextProps.restaurants.find( (a) => a.id === address)\n            this.setState({\n                restaurant: selectedRestaurant,\n                allReviews: selectedRestaurant.sustainabilityReviews,\n            })\n        }\n        \n        if (!nextProps.user) {\n        } else {\n            let temp = nextProps.user.savedRestaurants.filter( element => element === this.state.restaurant.id)\n\n            if (!temp){\n            } else {\n                this.setState({\n                    isFavorite: true\n                });\n            }\n        }\n\n    }\n\n    componentDidMount() {\n        // if (this.props.restaurant.id === undefined) {\n        //\n        //     API.getRestaurant(this.props.history.location.pathname.substring(12)).then(item => {\n        //         this.setState({\n        //             restaurant: item[0],\n        //             allReviews: item[0].sustainabilityReviews,\n        //         })\n        //\n        //         if (this.props.userLoggedIn) {\n        //             console.log('this.props.user.savedRestaurants', this.props.user.savedRestaurants)\n        //             let temp = this.props.user.savedRestaurants.find( element => element === this.props.restaurant.id)\n        //\n        //             if (!temp) {\n        //             } else {\n        //                 this.setState({\n        //                     isFavorite: true\n        //                 });\n        //             }\n        //         }\n        //     })\n        // }\n        //\n\n        if (this.props.userLoggedIn) {\n            let temp = this.props.user.savedRestaurants.filter( element => element === this.props.restaurant.id)\n\n            if (!temp) {\n            } else {\n                this.setState({\n                    isFavorite: true\n                });\n            }\n        }\n    }\n\n    static defaultProps = {\n        center: {\n            lat: -37,\n            lng: 144\n        },\n        zoom: 13\n    };\n    \n\n    render() {\n        // console.log('IS THIS RESTO SAVED:', this.state.isFavorite)\n\n        const { restaurant, allReviews } = this.state\n\n        if (this.props.loading){\n            return (\n                <div>LOADING</div>\n            )\n        } else {\n            return(\n                <div>\n                    <NavBar\n                        {...this.props}\n                        ref={this.navbar}\n\n                        logOutUser={this.logOutUser}\n                        logInUser={this.logInUser}\n                        signUpUser={this.signUpUser}\n                        userLoggedIn={this.props.userLoggedIn}\n                        goToProfile={this.goToProfile}\n                    />\n\n                    {\n                        restaurant.id !== undefined\n                            ? (\n                                <div className='restaurant-detail-container'>\n\n                                    <RewardSelector\n                                        userLoggedIn={this.props.userLoggedIn}\n                                        user={this.props.user}\n                                        restaurant={this.state.restaurant}\n                                        showLogin={this.showLogin}\n                                        showSignup={this.showSignup}\n                                        offeredRewards={this.state.restaurant.typeOfRewards}\n                                        updateUser={this.props.updateUser}\n                                    />\n\n                                    <div className='restaurant-detail-title'>\n                                        {restaurant.name}\n\n                                    </div>\n\n\n                                    <div className='restaurant-detail-photo'>\n                                        <img src={restaurant.photo}\n                                             alt='restaurant photo'\n                                        />\n                                    </div>\n                                    <div className='restaurant-detail-info'>\n                                        <p>{restaurant.description}</p>\n                                        <span>{restaurant.address}</span>\n                                        <span>{restaurant.phone}</span>\n                                        <a href={'http://www.' + restaurant.website} target=\"_blank\">Eatery Website</a>\n\n                                    </div>\n\n                                    <div className='restaurant-detail-rating'>\n                                        <div>Eco Friendliness</div>\n                                        <Rating\n                                            initialRating={restaurant.averageSustainabilityRating}\n                                            readonly={true}\n                                            emptySymbol={\n                                                <img\n                                                    alt='leaf empty'\n                                                    width={40}\n                                                    height={40}\n                                                    src={leafTranslucent}\n                                                />\n                                            }\n                                            fullSymbol={\n                                                <img\n                                                    alt='leaf full'\n                                                    width={40}\n                                                    height={40}\n                                                    src={leafOpaque}\n                                                />\n                                            }\n\n                                        />\n                                    </div>\n\n                                    <div className='restaurant-detail-map'>\n                                        <GoogleMapReact\n                                            bootstrapURLKeys={{ key: 'AIzaSyAThroloBz4lBlrWA_ZCmtXfOFdsI46CXY' }}\n                                            defaultCenter={{\n                                                lat: restaurant.location.lat,\n                                                lng: restaurant.location.lng,\n                                            }}\n                                            defaultZoom={this.props.zoom}\n                                        >\n                                            <AnyReactComponent\n                                                lat={restaurant.location.lat}\n                                                lng={restaurant.location.lng}\n                                                text=\"My Marker\"\n                                            />\n                                        </GoogleMapReact>\n                                    </div>\n\n                                    <div className='restaurant-detail-about'>\n                                        <h2>About</h2>\n\n                                        <div\n                                            className={this.props.userLoggedIn\n                                                ? 'restaurant-detail-star-container'\n                                                : 'restaurant-detail-star-container-hide'}\n                                            onClick={ this.state.isFavorite\n                                                ? this.unsetFavorite\n                                                : this.setFavorite\n                                            }\n                                        >\n                                            {this.state.isFavorite\n                                                ?   <IoIosStar\n                                                    className='restaurant-detail-star restaurant-detail-star-selected'\n                                                />\n                                                :   <IoIosStarOutline\n                                                    className='restaurant-detail-star restaurant-detail-star-not-selected'\n                                                />\n                                            }\n                                        </div>\n\n                                        <p> {restaurant.about} </p>\n\n                                        <h2>Sustainable Practices</h2>\n                                        <ul>\n                                            {\n                                                restaurant.sustainabilityPractices.map( item =>\n                                                    <li>{item}</li>\n                                                )\n                                            }\n                                        </ul>\n                                    </div>\n\n\n\n                                    <div className='restaurant-detail-reviews'>\n                                        <h2>Reviews</h2>\n\n                                        {\n                                            this.props.userLoggedIn\n                                                ?\n                                                (<div className='restaurant-detail-reviews-list-input'>\n                                                    <h3>Write a review.</h3>\n                                                    <div>\n                                                        <Rating\n                                                            initialRating={this.state.reviewRating}\n                                                            onChange={(rate) => this.setState({ reviewRating: rate})}\n\n                                                            emptySymbol={\n                                                                <img\n                                                                    alt='leaf empty'\n                                                                    width={22}\n                                                                    height={22}\n                                                                    src={leafTranslucent}\n                                                                />\n                                                            }\n                                                            fullSymbol={\n                                                                <img\n                                                                    alt='leaf full'\n                                                                    width={22}\n                                                                    height={22}\n                                                                    src={leafOpaque}\n                                                                />\n                                                            }\n                                                        />\n                                                    </div>\n\n                                                    <textarea\n                                                        value={this.state.reviewText}\n                                                        onChange={(rate) => this.setState({ reviewText: rate.target.value})}\n                                                    />\n\n                                                    <button\n                                                        onClick={this.submitReview}\n                                                    >\n                                                        Submit Review\n                                                    </button>\n                                                </div>)\n                                                :   (<div/>)\n                                        }\n\n\n                                        <div className='restaurant-detail-reviews-list'>\n                                            {\n                                                allReviews.map( review => (\n                                                    <div\n                                                        className='restaurant-detail-reviews-list-item'\n                                                        key={`${review.username}/${Date.parse(review.date)}`}\n                                                    >\n                                                        <label>{review.username}</label>\n                                                        <div>\n                                                            <Rating\n                                                                initialRating={review.rating}\n                                                                readonly={true}\n                                                                emptySymbol={\n                                                                    <img\n                                                                        alt='leaf empty'\n                                                                        width={22}\n                                                                        height={22}\n                                                                        src={leafTranslucent}\n                                                                    />\n                                                                }\n                                                                fullSymbol={\n                                                                    <img\n                                                                        alt='leaf full'\n                                                                        width={22}\n                                                                        height={22}\n                                                                        src={leafOpaque}\n                                                                    />\n                                                                }\n\n                                                            />\n                                                            <span >{this.dateString(review.date)}</span>\n                                                        </div>\n\n                                                        <p>{review.review}</p>\n                                                    </div>\n                                                ))\n                                            }\n\n                                            <div className='restaurant-detail-reviews-list-item-void'>\n                                            </div>\n                                        </div>\n\n                                    </div>\n\n                                </div>\n\n                            )\n                            :\n                            <div>\n                                Loading\n\n                            </div>\n                    }\n\n\n                    <Footer />\n                </div>\n            )\n        }\n    }\n\n    \n}\n\n\nexport default withRouter(RestaurantDetails)"]},"metadata":{},"sourceType":"module"}